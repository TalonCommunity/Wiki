"use strict";(self.webpackChunktalon_wiki=self.webpackChunktalon_wiki||[]).push([[5399],{8110:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"Voice Coding/voice-coding-overview","title":"Voice Coding Overview","description":"Talon community offers commands for inserting code in numerous languages. Formatters make dictating identifiers easier. Operator commands support dictating things like variable assignment, mathematical operators, and comparison operators. Symbol commands allow greater flexibility and handling paired delimiters like parentheses. Snippets allow efficiently dictating formulaic code patterns and are used for things like control flow statements, class and function definitions, return statements and more. Additional commands exist on a per language basis to make common tasks easier.","source":"@site/docs/Voice Coding/voice-coding-overview.md","sourceDirName":"Voice Coding","slug":"/Voice Coding/voice-coding-overview","permalink":"/Voice Coding/voice-coding-overview","draft":false,"unlisted":false,"editUrl":"https://github.com/TalonCommunity/Wiki/edit/main/docs/Voice Coding/voice-coding-overview.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"VoiceCodeSidebar","next":{"title":"Formatters","permalink":"/Voice Coding/formatters"}}');var o=n(4848),a=n(8453);const s={sidebar_position:1},r="Voice Coding Overview",c={},d=[{value:"Activating Languages",id:"activating-languages",level:2}];function l(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsx)(i.h1,{id:"voice-coding-overview",children:"Voice Coding Overview"})}),"\n",(0,o.jsxs)(i.p,{children:["Talon community offers commands for inserting code in numerous languages. ",(0,o.jsx)(i.a,{href:"/Voice%20Coding/formatters",children:"Formatters"})," make dictating identifiers easier. ",(0,o.jsx)(i.a,{href:"/Voice%20Coding/operators",children:"Operator commands"})," support dictating things like variable assignment, mathematical operators, and comparison operators. ",(0,o.jsx)(i.a,{href:"/Voice%20Coding/symbols",children:"Symbol"})," commands allow greater flexibility and handling paired delimiters like parentheses. ",(0,o.jsx)(i.a,{href:"/Voice%20Coding/snippets",children:"Snippets"})," allow efficiently dictating formulaic code patterns and are used for things like control flow statements, class and function definitions, return statements and more. ",(0,o.jsx)(i.a,{href:"/Voice%20Coding/language-specific",children:"Additional commands"})," exist on a per language basis to make common tasks easier."]}),"\n",(0,o.jsxs)(i.p,{children:[(0,o.jsx)(i.a,{href:"https://www.cursorless.org/docs/user/installation/",children:"Cursorless"})," offers the state of the art approach to editing code by voice."]}),"\n",(0,o.jsx)(i.h2,{id:"activating-languages",children:"Activating Languages"}),"\n",(0,o.jsx)(i.p,{children:"Community support for specific programming languages may be activated by voice commands, or via title tracking."}),"\n",(0,o.jsxs)(i.p,{children:["The command ",(0,o.jsx)(i.code,{children:"force {user.language_mode}"}),", where {user.language_mode} is a supported language name, activates support for the specified language. For example, ",(0,o.jsx)(i.code,{children:"force python"})," makes Python the active programming language. This disables language detection through title tracking until you say ",(0,o.jsx)(i.code,{children:"clear language modes"}),"."]}),"\n",(0,o.jsx)(i.p,{children:"By default, title tracking activates languages in supported applications such as VSCode, Visual Studio (requires plugin), and Notepad++ by automatically using the extension of the active file to infer the active programming language."}),"\n",(0,o.jsx)(i.p,{children:"To enable title tracking for your application:"}),"\n",(0,o.jsxs)(i.ol,{children:["\n",(0,o.jsx)(i.li,{children:"Ensure the active filename (including extension) is included in the window title."}),"\n",(0,o.jsxs)(i.li,{children:["Implement the required Talon-defined ",(0,o.jsx)(i.code,{children:"win.filename"})," action to correctly extract the filename from the window title. See the ",(0,o.jsx)(i.code,{children:"win.filename"})," action implementation in the ",(0,o.jsx)(i.a,{href:"https://github.com/talonhub/community/blob/7bab2d1e3a4548fafbd5a2a4612b021c3a10d926/apps/vscode/vscode.py#L186",children:"Visual Studio Code Python file"})," for an example."]}),"\n"]})]})}function m(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>s,x:()=>r});var t=n(6540);const o={},a=t.createContext(o);function s(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);