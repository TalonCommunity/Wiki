"use strict";(self.webpackChunktalon_wiki=self.webpackChunktalon_wiki||[]).push([[9724],{4284:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"Voice Coding/operators","title":"Operators","description":"With supported languages, most operators can be dictated with op (operator name) and comparison operators can be dictated with is (operator name).","source":"@site/docs/Voice Coding/operators.md","sourceDirName":"Voice Coding","slug":"/Voice Coding/operators","permalink":"/Voice Coding/operators","draft":false,"unlisted":false,"editUrl":"https://github.com/TalonCommunity/Wiki/edit/main/docs/Voice Coding/operators.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"VoiceCodeSidebar","previous":{"title":"Formatters","permalink":"/Voice Coding/formatters"},"next":{"title":"Snippets","permalink":"/Voice Coding/snippets"}}');var r=o(4848),i=o(8453);const s={sidebar_position:3},a="Operators",c={},d=[];function p(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"operators",children:"Operators"})}),"\n",(0,r.jsxs)(t.p,{children:["With supported languages, most operators can be dictated with ",(0,r.jsx)(t.code,{children:"op (operator name)"})," and comparison operators can be dictated with ",(0,r.jsx)(t.code,{children:"is (operator name)"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["For example, saying ",(0,r.jsx)(t.code,{children:"op equals"})," while editing a Python file inserts ",(0,r.jsx)(t.code,{children:"="}),". Saying ",(0,r.jsx)(t.code,{children:"is equal"})," inserts ",(0,r.jsx)(t.code,{children:"=="}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["To see which operators are supported for a given language and their spoken forms, use the ",(0,r.jsx)(t.code,{children:"help operators"})," command. To change how operators are inserted, find the Python file for the language implementation in the ",(0,r.jsx)(t.a,{href:"https://github.com/talonhub/community/tree/main/lang",children:"lang directory"})," and edit the ",(0,r.jsx)(t.code,{children:"Operators"})," object. You can find the definitions for the spoken forms of the operators in the .talon-list files with names that start with ",(0,r.jsx)(t.code,{children:"operators"})," in the ",(0,r.jsx)(t.a,{href:"https://github.com/talonhub/community/tree/main/lang/tags",children:"lang/tags directory"}),"."]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>a});var n=o(6540);const r={},i=n.createContext(r);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);