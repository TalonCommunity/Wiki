"use strict";(self.webpackChunktalon_wiki=self.webpackChunktalon_wiki||[]).push([[1808],{2678:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>a,frontMatter:()=>o,metadata:()=>n,toc:()=>h});const n=JSON.parse('{"id":"Voice Coding/formatters","title":"Formatters","description":"Formatter commands are useful for formatting text, including prose and identifiers in code. You use a formatter by saying the name of the formatter and then the words you want formatted. You can the full list of formatters by saying help formatters \u2014\xa0formatter names are listed on the right and the example text \\"one two three\\" formatted by that formatter on the left.","source":"@site/docs/Voice Coding/formatters.md","sourceDirName":"Voice Coding","slug":"/Voice Coding/formatters","permalink":"/Voice Coding/formatters","draft":false,"unlisted":false,"editUrl":"https://github.com/TalonCommunity/Wiki/edit/main/docs/Voice Coding/formatters.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"VoiceCodeSidebar","previous":{"title":"Voice Coding Overview","permalink":"/Voice Coding/voice-coding-overview"},"next":{"title":"Operators","permalink":"/Voice Coding/operators"}}');var d=r(4848),s=r(8453);const o={sidebar_position:2},i="Formatters",c={},h=[];function l(e){const t={code:"code",h1:"h1",header:"header",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"formatters",children:"Formatters"})}),"\n",(0,d.jsxs)(t.p,{children:["Formatter commands are useful for formatting text, including prose and identifiers in code. You use a formatter by saying the name of the formatter and then the words you want formatted. You can the full list of formatters by saying ",(0,d.jsx)(t.code,{children:"help formatters"}),' \u2014\xa0formatter names are listed on the right and the example text "one two three" formatted by that formatter on the left.']}),"\n",(0,d.jsxs)(t.p,{children:["Example: saying ",(0,d.jsx)(t.code,{children:"camel one two three"})," will insert the text ",(0,d.jsx)(t.code,{children:"oneTwoThree"}),"."]}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Identifier Formatter"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Example"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"camel"})}),(0,d.jsx)(t.td,{children:"camel case"}),(0,d.jsx)(t.td,{children:"oneTwoThree"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"snake"})}),(0,d.jsx)(t.td,{children:"underscore (_) between words"}),(0,d.jsx)(t.td,{children:"one_two_three"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"kabob"})}),(0,d.jsx)(t.td,{children:"hash (-) between words"}),(0,d.jsx)(t.td,{children:"one-two-three"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"constant"})}),(0,d.jsx)(t.td,{children:"all caps with underscore between words"}),(0,d.jsx)(t.td,{children:"ONE_TWO_THREE"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"hammer"})}),(0,d.jsx)(t.td,{children:"Pascal case: the start of each word is capitalized"}),(0,d.jsx)(t.td,{children:"OneTwoThree"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"smash"})}),(0,d.jsx)(t.td,{children:"lowercase with no separator symbols"}),(0,d.jsx)(t.td,{children:"onetwothree"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"dunder"})}),(0,d.jsx)(t.td,{children:"double underscore (__) between words"}),(0,d.jsx)(t.td,{children:"one__two__three"})]})]})]}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Other Code Formatter"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Example"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"dotted"})}),(0,d.jsx)(t.td,{children:"period (.) between words"}),(0,d.jsx)(t.td,{children:"one.two.three"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"packed"})}),(0,d.jsx)(t.td,{children:"double colon (::) between words"}),(0,d.jsx)(t.td,{children:"one::\u200btwo::three"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"string"})}),(0,d.jsx)(t.td,{children:"words surrounded by single quotes"}),(0,d.jsx)(t.td,{children:"'one two three'"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"dub string"})}),(0,d.jsx)(t.td,{children:"words surrounded by double quotes"}),(0,d.jsx)(t.td,{children:'"one two three"'})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"conga"})}),(0,d.jsx)(t.td,{children:"slash (/) between words"}),(0,d.jsx)(t.td,{children:"one/two/three"})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"slasher"})}),(0,d.jsx)(t.td,{children:"slash (/) at the start and between words"}),(0,d.jsx)(t.td,{children:"/one/two/three"})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>i});var n=r(6540);const d={},s=n.createContext(d);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);